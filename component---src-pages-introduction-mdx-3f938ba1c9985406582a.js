"use strict";(self.webpackChunksoundly_functional=self.webpackChunksoundly_functional||[]).push([[229],{45424:function(e,t,o){o.r(t),o.d(t,{_frontmatter:function(){return g},default:function(){return f}});var n=o(63366),a=(o(67294),o(64983)),r=o(407),i=o(48269),l=o(27020),p=o(37086),s=o(74831),u=o(50680),c=o(60283),m=o(77606),h=o(88014),d=["components"],g={},k={_frontmatter:g};function f(e){var t=e.components,o=(0,n.Z)(e,d);return(0,a.kt)("wrapper",Object.assign({},k,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",null,"Hi ðŸ‘‹"),(0,a.kt)("p",null,"I'm Mike, and I use functional programming to make music and noise."),(0,a.kt)(r.J,{player:l.main,code:i,mdxType:"Player"}),(0,a.kt)("p",null,"The example above uses many rich control structures that are challenging to recreate in traditional DAW like ",(0,a.kt)("a",{parentName:"p",href:"https://www.apple.com/logic-pro/"},"Logic Pro"),", a tool like ",(0,a.kt)("a",{parentName:"p",href:"https://www.ableton.com/en/live/"},"Live"),", a visual coding language like ",(0,a.kt)("a",{parentName:"p",href:"https://cycling74.com/products/max"},"Max")," or a procedural language like ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript"},"JavaScript"),". I've written it in a functional programming language called ",(0,a.kt)("a",{parentName:"p",href:"https://purescript.org"},"PureScript"),", a language in the ML-family of languages with some of the most powerful abstractions I've ever seen for controlling data."),(0,a.kt)("p",null,"I'm writing these articles because I believe that millions of musical voices are not realizing their full potential because modern digital tooling enforces paradigms that, while useful, ultimately stifle creativity. Functional programming (or \"FP\") provides a toolset of powerful ideas that enable, motivate, and inspire artists to create radically new work. I hope that, by the end of our time together, you'll feel empowered to use FP in your own artistic creations."),(0,a.kt)("h2",null,"The journey ahead"),(0,a.kt)("p",null,"Over the next few lessons, we'll go over concepts like rhythms, functors, chords, products, improvisation, co-ends, mysticism and dependent types. The goal will be to use music to strengthen our intuition about functional programming and to use functional programming to strengthen our intuition about music."),(0,a.kt)("p",null,"During this journey, we will frequently make use of our fingers to edit code and our ears to listen. Our basic interface will be an editor pane like the one below. Click or press the ",(0,a.kt)(m.G,{icon:h.aQp,mdxType:"FontAwesomeIcon"})," button below the code to hear the note ",(0,a.kt)("inlineCode",{parentName:"p"},"c4"),"."),(0,a.kt)(r.J,{player:s.main,code:p,mdxType:"Player"}),(0,a.kt)("p",null,"In the example you're listening to, ",(0,a.kt)("inlineCode",{parentName:"p"},"c4")," is a pitch representing middle-c on a piano. Press ",(0,a.kt)(m.G,{icon:h.oD0,mdxType:"FontAwesomeIcon"})," and then click on ",(0,a.kt)("inlineCode",{parentName:"p"},"c4")," to edit the code.  Try changing the ",(0,a.kt)("inlineCode",{parentName:"p"},"c4")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"d4"),", then press ",(0,a.kt)(m.G,{icon:h.aQp,mdxType:"FontAwesomeIcon"})," again and listen to the difference. What about ",(0,a.kt)("inlineCode",{parentName:"p"},"aFlat4"),"? ",(0,a.kt)("inlineCode",{parentName:"p"},"c5"),"?"),(0,a.kt)("p",null,"Building from here, we can arrive at complex patterns in ~10 lines of code after various ",(0,a.kt)("inlineCode",{parentName:"p"},"import")," statements."),(0,a.kt)(r.J,{preload:!0,player:c.main,code:u,mdxType:"Player"}),(0,a.kt)("p",null,"The above example, like all of the sound examples on this blog, is editable."),(0,a.kt)("p",null,"If you've never worked with functional programming before, don't worry. The code in the example uses a several powerful abstractions, including the ",(0,a.kt)("a",{parentName:"p",href:"https://pursuit.purescript.org/packages/purescript-prelude/5.0.1/docs/Data.Functor#t:Functor"},"functor"),", the ",(0,a.kt)("a",{parentName:"p",href:"https://pursuit.purescript.org/packages/purescript-profunctor/5.0.0/docs/Data.Profunctor#t:Profunctor"},"profunctor"),", and the ",(0,a.kt)("a",{parentName:"p",href:"https://pursuit.purescript.org/packages/purescript-prelude/5.0.1/docs/Control.Semigroupoid#t:Semigroupoid"},"semigroupoid"),". We'll learn about what all these concepts mean and revisit some of them multiple times. The important thing to know is that one domain will always reinforce the other, stimulating our creativity and leading us to new territory as both musicians and programmers."),(0,a.kt)("p",null,"Lastly, a bit of housekeeping. All you need is a browser to follow along, play the audio examples, and edit them. However, at a certain point, you may want to experiment on your local machine or jam with others on a shared server. At the end of every lesson, including this one, there will be a link to a page where you can learn how to set up your own music-making environment."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/mikesol/purescript-wags"},"Click here")," for additional resources for working with these examples on the cloud, on Windows, on Mac or on Linux. ",(0,a.kt)("a",{parentName:"p",href:"https://purescript.org"},"Click here")," to learn more about the PureScript programming language, and join the Discord using ",(0,a.kt)("a",{parentName:"p",href:"https://purescript.org/chat"},"this link"),". You'll find me on the ",(0,a.kt)("inlineCode",{parentName:"p"},"#music")," channel ðŸŽ¶.")))}f.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-introduction-mdx-3f938ba1c9985406582a.js.map