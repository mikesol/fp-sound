{"version":3,"file":"component---src-pages-07-the-gesture-and-the-comonad-mdx-82e39d653f806d98082f.js","mappings":"oQAOaA,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAGa,SAASE,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAC5E,kDACA,qmBACA,6EAA+D,cAAIC,WAAW,KAAf,YAA/D,6fAAgmB,cAAIA,WAAW,KAAf,SAAhmB,mJAAoxB,cAAIA,WAAW,KAAf,WAApxB,iDAKJJ,EAAWK,gBAAiB","sources":["webpack://soundly-functional/./src/pages/07.TheGestureAndTheComonad.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`The gesture and the comonad`}</h1>\n    <p>{`A musical moment is an interstice in time immortal. Disparate forces combine together to create something beautiful and magical, and then they dissipate. The forces themselves, however, are eternal. An arm exists before and after it drags a bow across a cello string, and the arm itself is composed of matter and forces that predate and will post-date the human to whom the arm belongs as the cello string is being played. Musical experience, and indeed all things that we could qualify as experience, carves out a small nook in an infinitely-long continuum of time, space, matter and force.`}</p>\n    <p>{`In the last chapter, we learned how a monad modeled the `}<em parentName=\"p\">{`possible`}</em>{`. The possible, when made actual, always terminates at some point. It may terminate in a way that we're not happy with (by resulting in an exception, for example). But time does not end, nor do the physical forces that translate into human gestures, some of which are uniquely applied to the making of and listening to music. Like the monad, I find this idea deeply unsettling. As a species, we have various shared notions of what infinity, but there is a gulf between understanding infinity and actually `}<em parentName=\"p\">{`using`}</em>{` infinity as a workable abstraction when making a program or a work of art. Functional programming helps bridge this divide with the idea of a `}<em parentName=\"p\">{`comonad`}</em>{`, which will be the subject of this section.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}