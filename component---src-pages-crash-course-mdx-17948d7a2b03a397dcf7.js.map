{"version":3,"file":"component---src-pages-crash-course-mdx-17948d7a2b03a397dcf7.js","mappings":"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","sources":["webpack://soundly-functional/./src/pages/crash-course.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { Player } from \"../components/player\";\nimport Footer from \"../components/footer\";\nimport Next from \"../components/next\";\nimport single from \"../FPSound/CrashCourse/Single.purs\";\nimport { main as singleMain } from \"../../output/FPSound.CrashCourse.Single/\";\nimport several from \"../FPSound/CrashCourse/Several.purs\";\nimport { main as severalMain } from \"../../output/FPSound.CrashCourse.Several/\";\nimport faster from \"../FPSound/CrashCourse/Faster.purs\";\nimport { main as fasterMain } from \"../../output/FPSound.CrashCourse.Faster/\";\nimport silence from \"../FPSound/CrashCourse/Silence.purs\";\nimport { main as silenceMain } from \"../../output/FPSound.CrashCourse.Silence/\";\nimport simul from \"../FPSound/CrashCourse/Simul.purs\";\nimport { main as simulMain } from \"../../output/FPSound.CrashCourse.Simul/\";\nimport subdiv from \"../FPSound/CrashCourse/Subdiv.purs\";\nimport { main as subdivMain } from \"../../output/FPSound.CrashCourse.Subdiv/\";\nimport branch from \"../FPSound/CrashCourse/Branch.purs\";\nimport { main as branchMain } from \"../../output/FPSound.CrashCourse.Branch/\";\nimport poly from \"../FPSound/CrashCourse/Poly.purs\";\nimport { main as polyMain } from \"../../output/FPSound.CrashCourse.Poly/\";\nimport voices from \"../FPSound/CrashCourse/Voices.purs\";\nimport { main as voicesMain } from \"../../output/FPSound.CrashCourse.Voices/\";\nimport drones from \"../FPSound/CrashCourse/Drones.purs\";\nimport { main as dronesMain } from \"../../output/FPSound.CrashCourse.Drones/\";\nimport volume from \"../FPSound/CrashCourse/Volume.purs\";\nimport { main as volumeMain } from \"../../output/FPSound.CrashCourse.Volume/\";\nimport rate from \"../FPSound/CrashCourse/Rate.purs\";\nimport { main as rateMain } from \"../../output/FPSound.CrashCourse.Rate/\";\nimport sounds from \"../FPSound/CrashCourse/Sounds.purs\";\nimport { main as soundsMain } from \"../../output/FPSound.CrashCourse.Sounds/\";\nimport foft from \"../FPSound/CrashCourse/FofT.purs\";\nimport { main as foftMain } from \"../../output/FPSound.CrashCourse.FofT/\";\nimport highpass from \"../FPSound/CrashCourse/Highpass.purs\";\nimport { main as highpassMain } from \"../../output/FPSound.CrashCourse.Highpass/\";\nimport pan from \"../FPSound/CrashCourse/Pan.purs\";\nimport { main as panMain } from \"../../output/FPSound.CrashCourse.Pan/\";\nimport sines from \"../FPSound/CrashCourse/Sines.purs\";\nimport { main as sinesMain } from \"../../output/FPSound.CrashCourse.Sines/\";\nimport feedback from \"../FPSound/CrashCourse/Feedback.purs\";\nimport { main as feedbackMain } from \"../../output/FPSound.CrashCourse.Feedback/\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlayCircle, faStopCircle } from \"@fortawesome/free-solid-svg-icons\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1>{`A Crash Course on Wags`}</h1>\n    <p>{`This page is a crash course for `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/mikesol/purescript-wags\"\n      }}><inlineCode parentName=\"a\">{`purescript-wags`}</inlineCode></a>{`, the web audio library that powers `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/mikesol/wags.fm\"\n      }}><inlineCode parentName=\"a\">{`wags.fm`}</inlineCode></a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/mikesol/wagsi\"\n      }}><inlineCode parentName=\"a\">{`wagsi`}</inlineCode></a>{`.`}</p>\n    <h2>{`A single hi-hat`}</h2>\n    <p>{`Let's start with a single hi-hat.`}</p>\n    <Player player={singleMain} code={single} mdxType=\"Player\" />\n    <p>{`To listen to this and all other examples, click or press the `}<strong parentName=\"p\">{`Play`}</strong>{` `}<FontAwesomeIcon icon={faPlayCircle} mdxType=\"FontAwesomeIcon\" />{` button below the player.`}</p>\n    <p>{`Wags is written in `}<a parentName=\"p\" {...{\n        \"href\": \"https://purescript.org\"\n      }}>{`PureScript`}</a>{`, but you don't need to know PureScript in order to use wags. In the example above, change `}<inlineCode parentName=\"p\">{`hh:0`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`bd:0`}</inlineCode>{` (bass drum), stop it, and start it again. Change it to `}<inlineCode parentName=\"p\">{`realclaps:0`}</inlineCode>{` (clap), stop it, and start it again. You can change to any of the sounds from the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/mikesol/wagsi/blob/main/SOUNDS.md\"\n      }}>{`Amazing SuperDirt Sample Library`}</a>{`. Much of the Wags syntax is heavily inspired by `}<a parentName=\"p\" {...{\n        \"href\": \"https://tidalcycles.org/\"\n      }}>{`Tidal Cycles`}</a>{`, so if you know Tidal, you should feel at home.`}</p>\n    <p>{`If you're coming from `}<a parentName=\"p\" {...{\n        \"href\": \"https://wags.fm\"\n      }}>{`wags.fm`}</a>{`, you can copy this and all other examples into the `}<em parentName=\"p\">{`blank slate`}</em>{` track and they will work out of the box.`}</p>\n    <h2>{`More samples`}</h2>\n    <p>{`When you add more samples like `}<inlineCode parentName=\"p\">{`bd:0`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`hh:0`}</inlineCode>{` to the string, they are played in series.  The example below has four different samples. Try adding and removing some to see what happens.`}</p>\n    <Player player={severalMain} code={several} mdxType=\"Player\" />\n    <h2>{`Faster loops`}</h2>\n    <p>{`Let's make our loop faster. The example below is the same as the one above but plays at twice the speed. This is because the first value passed to `}<inlineCode parentName=\"p\">{`make`}</inlineCode>{` is `}<inlineCode parentName=\"p\">{`0.4`}</inlineCode>{`, or half of the value used above.`}</p>\n    <Player player={fasterMain} code={faster} mdxType=\"Player\" />\n    <h2>{`Silence`}</h2>\n    <p>{`Silence is golden! Use a tidla (`}<inlineCode parentName=\"p\">{`~`}</inlineCode>{`) to add silence in place of a note.`}</p>\n    <Player player={silenceMain} code={silence} mdxType=\"Player\" />\n    <h2>{`Simultaneous samples`}</h2>\n    <p>{`Sometimes, you want two samples to play at the same time. You can do this by putting square brackets (`}<inlineCode parentName=\"p\">{`[`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`]`}</inlineCode>{`) around them and separating them with a comma. More than two samples? No problem, just add more commas.`}</p>\n    <p>{`In the example below, we use three quotation marks to open and close a multiline string.`}</p>\n    <Player player={simulMain} code={simul} mdxType=\"Player\" />\n    <h2>{`Subdivisions`}</h2>\n    <p>{`To create internal subdivisions like 16th-notes (aka semiquavers), use square brackets (`}<inlineCode parentName=\"p\">{`[`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`]`}</inlineCode>{`) without a comma. You can also use an asterisk (`}<inlineCode parentName=\"p\">{`*`}</inlineCode>{`) to create subdivisions of a single sample.`}</p>\n    <Player player={subdivMain} code={subdiv} mdxType=\"Player\" />\n    <h2>{`Polyrhythms`}</h2>\n    <p>{`You can combine subdivisions and simultaneous samples to create polyrhythms. Let's listen to 3 on 4.`}</p>\n    <Player player={polyMain} code={poly} mdxType=\"Player\" />\n    <h2>{`Branching cycles`}</h2>\n    <p>{`Hearing the same loop over and over again is boring. Spice it up with `}<em parentName=\"p\">{`branching`}</em>{`. Each time the cycle loops, a different branch will be chosen.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Branches multiply, so something that branches two times, then three times, and then four times will be 2 × 3 × 4 = 24 cycles long!`}</p>\n    </blockquote>\n    <Player player={branchMain} code={branch} mdxType=\"Player\" />\n    <h2>{`Voices`}</h2>\n    <p>{`Up until now, we've only used one voice called `}<inlineCode parentName=\"p\">{`earth`}</inlineCode>{`. Let's add a new voice called `}<inlineCode parentName=\"p\">{`wind`}</inlineCode>{`. The three possible voices are `}<inlineCode parentName=\"p\">{`earth`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`wind`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`fire`}</inlineCode>{`. Different voices are helpful when you're doing a `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/mikesol/wagsi\"\n      }}><inlineCode parentName=\"a\">{`wagsi`}</inlineCode></a>{` jam session, as different DJs can work on different areas of a single document. They're also useful if you want to add effects (we'll add effects later).`}</p>\n    <Player player={voicesMain} code={voices} mdxType=\"Player\" />\n    <h2>{`Drones`}</h2>\n    <p>{`To add a drone, you can use the `}<inlineCode parentName=\"p\">{`air`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`heart`}</inlineCode>{` voice followed by the `}<inlineCode parentName=\"p\">{`drone`}</inlineCode>{` function with the sample you wish to use. The sample will loop.`}</p>\n    <Player player={dronesMain} code={drones} mdxType=\"Player\" />\n    <h2>{`Working with new samples`}</h2>\n    <p>{`You can add new samples by providing an object to the `}<inlineCode parentName=\"p\">{`sounds`}</inlineCode>{` field of the top-level record. `}<inlineCode parentName=\"p\">{`sounds`}</inlineCode>{` takes an object of `}<inlineCode parentName=\"p\">{`BufferUrl`}</inlineCode>{`-s, and we can construct it using standard PureScript functions like `}<a parentName=\"p\" {...{\n        \"href\": \"https://pursuit.purescript.org/packages/purescript-tuples/6.0.1/docs/Data.Tuple.Nested\"\n      }}><inlineCode parentName=\"a\">{`/\\\\`}</inlineCode></a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"https://pursuit.purescript.org/packages/purescript-prelude/5.0.1/docs/Control.Semigroupoid\"\n      }}><inlineCode parentName=\"a\">{`<<<`}</inlineCode></a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://pursuit.purescript.org/packages/purescript-foreign-object/3.0.0/docs/Foreign.Object#v:fromFoldable\"\n      }}><inlineCode parentName=\"a\">{`fromFoldable`}</inlineCode></a>{`.`}</p>\n    <Player player={soundsMain} code={sounds} mdxType=\"Player\" />\n    <h2>{`Changing the volume of a note`}</h2>\n    <p>{`You can give any note a tag using a semi-colon (`}<inlineCode parentName=\"p\">{`;`}</inlineCode>{`). Then, use the `}<inlineCode parentName=\"p\">{`onTag`}</inlineCode>{` function to grab the note and `}<inlineCode parentName=\"p\">{`changeVolume`}</inlineCode>{` to change the volume. A couple additional things to note:`}</p>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`const`}</inlineCode>{` is a PureScript function that returns constant values.`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`parse_`}</inlineCode>{` must be used to end a chain of one or more `}<inlineCode parentName=\"li\">{`onTag`}</inlineCode>{`.`}</li>\n    </ol>\n    <Player player={volumeMain} code={volume} mdxType=\"Player\" />\n    <h2>{`Changing the rate (pitch) of a note`}</h2>\n    <p>{`You can use `}<inlineCode parentName=\"p\">{`changeRate`}</inlineCode>{` to change the rate of a note.`}</p>\n    <Player preload player={rateMain} code={rate} mdxType=\"Player\" />\n    <h2>{`Working with functions of time`}</h2>\n    <p>{`It's often useful to work with functions of time. You can modify both rate and volume as a function of time. There are many different representations of time, so choose wisely! The example below uses:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`clockTime`}</inlineCode>{` to change the volume`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`sampleTime`}</inlineCode>{` to change the rate`}</li>\n    </ul>\n    <p>{`It also uses a `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Low-frequency_oscillation\"\n      }}>{`Low Frequency Oscillator (`}<inlineCode parentName=\"a\">{`lfo`}</inlineCode>{`)`}</a>{`. Lastly, it uses the `}<inlineCode parentName=\"p\">{`>>>`}</inlineCode>{` operator to pipe values from left-to-right. Because we're making heavy use of the `}<inlineCode parentName=\"p\">{`WAGS.Lib.Tidal.Tidal`}</inlineCode>{` module, we'll use a qualified import and rename it `}<inlineCode parentName=\"p\">{`T`}</inlineCode>{`.`}</p>\n    <Player player={foftMain} code={foft} mdxType=\"Player\" />\n    <p>{`Other types of time you can use include:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`littleCycleTime`}</inlineCode>{`: the time since the branch of a cycle started. For example, if you have a cycle that lasts 4 seconds with 5 branches and you just started branch 3, the value will be `}<inlineCode parentName=\"li\">{`0.0`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`bigCycleTime`}</inlineCode>{`: the time since the last cycle started. For example, if you have a cycle that lasts 4 seconds with 5 branches and you just started branch 3, the value will be `}<inlineCode parentName=\"li\">{`12.0`}</inlineCode>{`.`}</li>\n    </ul>\n    <h2>{`Adding effects`}</h2>\n    <p>{`You can add aribtrary effects chains to voices. Effect chains must end with an output called `}<inlineCode parentName=\"p\">{`goodbye`}</inlineCode>{` and optionally use an input called `}<inlineCode parentName=\"p\">{`hello`}</inlineCode>{`. Discarding the input is useful if you want to create purely synthetic effects.`}</p>\n    <h3>{`High-pass filter`}</h3>\n    <p>{`Let's add a high-pass filter to create a sweeping effect. The function `}<inlineCode parentName=\"p\">{`ff`}</inlineCode>{` here creates a small control-rate delay that smooths over the rapid changes in the filter's frequency, which could cause clicks or pops on some devices.`}</p>\n    <Player player={highpassMain} code={highpass} mdxType=\"Player\" />\n    <h3>{`Pan`}</h3>\n    <p>{`Let's now try a pan.`}</p>\n    <Player player={panMain} code={pan} mdxType=\"Player\" />\n    <h3>{`Synthetic sounds`}</h3>\n    <p>{`Let's add a few sine-wave oscillators.`}</p>\n    <Player player={sinesMain} code={sines} mdxType=\"Player\" />\n    <h3>{`Delays and feedback`}</h3>\n    <p>{`To create a feedback loop, use the `}<inlineCode parentName=\"p\">{`delay`}</inlineCode>{` effect as well as `}<inlineCode parentName=\"p\">{`ref`}</inlineCode>{`, which is a reference to another node in the graph. In this case, `}<inlineCode parentName=\"p\">{`ref`}</inlineCode>{` refers to `}<inlineCode parentName=\"p\">{`mymix`}</inlineCode>{`, which is the gain node that we created elsewhere in the graph.`}</p>\n    <Player player={feedbackMain} code={feedback} mdxType=\"Player\" />\n    <h3>{`Other effects`}</h3>\n    <p>{`Almost all of the effects from the WebAudio API are reproducible using this method. For example, to use an allpass filter instead of a highpass, import `}<inlineCode parentName=\"p\">{`allpass`}</inlineCode>{` instead of `}<inlineCode parentName=\"p\">{`highpass`}</inlineCode>{`. All importable functions can be found in `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/mikesol/purescript-wags/blob/main/src/WAGS/Create/Optionals.purs\"\n      }}>{`this module`}</a>{`.`}</p>\n    <h2>{`Inspiration`}</h2>\n    <p><inlineCode parentName=\"p\">{`wags`}</inlineCode>{` is heavily indebted to the `}<a parentName=\"p\" {...{\n        \"href\": \"https://tidalcycles.org/\"\n      }}>{`Tidal Cycles`}</a>{` project, which inspired its mini-notation. It also makes heavy use of:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`the `}<a parentName=\"li\" {...{\n          \"href\": \"https://purescript.org\"\n        }}>{`PureScript Programming Language`}</a>{`, a purely functional language originally created by `}<a parentName=\"li\" {...{\n          \"href\": \"https://twitter.com/paf31\"\n        }}>{`Phil Freeman`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`cofree comonads, an idea popularized (if not invented) by `}<a parentName=\"li\" {...{\n          \"href\": \"https://twitter.com/kmett\"\n        }}>{`Edward Kmett`}</a>{`.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://en.wikipedia.org/wiki/Functional_reactive_programming\"\n        }}>{`functional reactive programming`}</a>{`, a technique popularized by Conal Elliott and Paul Hudak.`}</li>\n    </ul>\n    <h2>{`What next?`}</h2>\n    <p>{`You could:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`listen to a track on `}<a parentName=\"li\" {...{\n          \"href\": \"https://wags.fm\"\n        }}>{`wags.fm`}</a>{`. All of the tracks are editable in real-time just like these examples. You could also propose your own track on the `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/mikesol/wags.fm\"\n        }}>{`GitHub`}</a>{` or leave a suggestion on the `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/mikesol/wags.fm/issues\"\n        }}>{`issues page`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`use `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/mikesol/wagsi\"\n        }}>{`wagsi`}</a>{` to `}<a parentName=\"li\" {...{\n          \"href\": \"https://twitter.com/stronglynormal/status/1459623955719991299\"\n        }}>{`DJ your own session`}</a>{` and collaborate with others as you do. Our community has one jam session a month, and we usually meet up on the `}<inlineCode parentName=\"li\">{`#music`}</inlineCode>{` channel of the `}<a parentName=\"li\" {...{\n          \"href\": \"https://purescript.org/chat\"\n        }}>{`PureScript Discord`}</a>{` server.`}</li>\n      <li parentName=\"ul\">{`dive into the examples on `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/mikesol/purescript-wags-lib\"\n        }}><inlineCode parentName=\"a\">{`purescript-wags-lib`}</inlineCode></a>{` for more advanced use cases, including using `}<a parentName=\"li\" {...{\n          \"href\": \"https://purescript-wags-lib-sector.netlify.app/\"\n        }}>{`TensorFlow.js to create markov models`}</a>{` (code `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/mikesol/purescript-wags-lib/tree/main/examples/sector\"\n        }}>{`here`}</a>{`) and `}<a parentName=\"li\" {...{\n          \"href\": \"https://purescript-wags-lib-sequencer.netlify.app/\"\n        }}>{`controlling the music with a mouse`}</a>{` (code `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/mikesol/purescript-wags-lib/tree/main/examples/gamelan\"\n        }}>{`here`}</a>{`).`}</li>\n      <li parentName=\"ul\">{`embed `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/mikesol/purescript-wags\"\n        }}>{`wags`}</a>{` into your site to create rich interactive audio experiences, including custom `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/AudioWorklet\"\n        }}>{`Audio Worklets`}</a>{` and `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode\"\n        }}>{`Analyzers`}</a>{`.`}</li>\n    </ul>\n    <p>{`I wish you lots of satisfaction as you play with `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/mikesol/purescript-wags\"\n      }}>{`Wags`}</a>{` to create music, noise, or whatever makes your ears perk up. Happy wagging!`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","player","singleMain","code","single","icon","faPlayCircle","severalMain","several","fasterMain","faster","silenceMain","silence","simulMain","simul","subdivMain","subdiv","polyMain","poly","branchMain","branch","voicesMain","voices","dronesMain","drones","soundsMain","sounds","volumeMain","volume","preload","rateMain","rate","foftMain","foft","highpassMain","highpass","panMain","pan","sinesMain","sines","feedbackMain","feedback","isMDXComponent"],"sourceRoot":""}